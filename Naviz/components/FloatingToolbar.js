import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from './ui/button';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';
import { Camera, Eye, Minimize, Maximize, Volume2 } from 'lucide-react';
const FloatingToolbar = ({ onCameraToggle, onEyeToggle, onMuteToggle, onOrbitToggle, onFlyToggle, onWalkToggle, onGridToggle, onFloodToggle, onAICoDesignerToggle, isCameraActive, isEyeActive, isMuteActive, isOrbitActive, isFlyActive, isWalkActive, isGridActive, isFloodActive, isAICoDesignerActive }) => {
    const [isVisible, setIsVisible] = useState(true);
    if (!isVisible) {
        return (_jsx("div", { className: "fixed top-20 left-4 z-50", children: _jsx(Button, { size: "sm", variant: "outline", onClick: () => setIsVisible(true), title: "Show Toolbar", "aria-label": "Show Toolbar", children: _jsx(Maximize, { className: "w-4 h-4" }) }) }));
    }
    return (_jsxs("div", { className: "fixed top-20 left-4 z-50 bg-background/95 backdrop-blur border border-gray-600 rounded-lg shadow-lg p-2 flex flex-col gap-2", "aria-label": "Floating Toolbar", children: [_jsxs("div", { className: "flex justify-between items-center mb-1", children: [_jsx("span", { className: "text-xs font-medium text-gray-300", children: "Camera Tools" }), _jsx(Button, { size: "sm", variant: "ghost", className: "h-6 w-6 p-0", onClick: () => setIsVisible(false), title: "Hide Toolbar", "aria-label": "Hide Toolbar", children: _jsx(Minimize, { className: "w-4 h-4" }) })] }), _jsxs("div", { className: "flex gap-1", children: [_jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isCameraActive ? 'default' : 'outline', onClick: onCameraToggle, "aria-pressed": isCameraActive, title: "Camera Controls", children: _jsx(Camera, { className: "w-4 h-4" }) }) }), _jsx(TooltipContent, { children: "Camera Controls" })] }) }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isEyeActive ? 'default' : 'outline', onClick: onEyeToggle, "aria-pressed": isEyeActive, title: "Toggle Visibility", children: _jsx(Eye, { className: "w-4 h-4" }) }) }), _jsx(TooltipContent, { children: "Toggle Visibility" })] }) }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isMuteActive ? 'default' : 'outline', onClick: onMuteToggle, "aria-pressed": isMuteActive, title: "Mute Audio", children: _jsx(Volume2, { className: "w-4 h-4" }) }) }), _jsx(TooltipContent, { children: "Mute Audio" })] }) })] }), _jsxs("div", { className: "flex gap-1", children: [_jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isOrbitActive ? 'default' : 'outline', onClick: onOrbitToggle, "aria-pressed": isOrbitActive, title: "Orbit Mode", children: "Orbit" }) }), _jsx(TooltipContent, { children: "Orbit Camera Mode" })] }) }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isFlyActive ? 'default' : 'outline', onClick: onFlyToggle, "aria-pressed": isFlyActive, title: "Fly Mode", children: "Fly" }) }), _jsx(TooltipContent, { children: "Fly Camera Mode" })] }) }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isWalkActive ? 'default' : 'outline', onClick: onWalkToggle, "aria-pressed": isWalkActive, title: "Walk Mode", children: "Walk" }) }), _jsx(TooltipContent, { children: "Walk Camera Mode" })] }) })] }), _jsxs("div", { className: "flex justify-between items-center mt-2 pt-2 border-t border-gray-600", children: [_jsx("span", { className: "text-xs font-medium text-gray-300", children: "Quick Features" }), _jsx("span", { className: "text-xs text-gray-400", children: "G/F/A" })] }), _jsxs("div", { className: "flex flex-wrap gap-1", children: [_jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isGridActive ? 'default' : 'outline', onClick: onGridToggle, "aria-pressed": isGridActive, title: "Toggle Grid (G)", children: _jsx(Grid3X3, { className: "w-4 h-4" }) }) }), _jsx(TooltipContent, { children: "Toggle Grid (G)" })] }) }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isFloodActive ? 'default' : 'outline', onClick: onFloodToggle, "aria-pressed": isFloodActive, title: "Flood Simulation (F)", children: _jsx(Droplets, { className: "w-4 h-4" }) }) }), _jsx(TooltipContent, { children: "Flood Simulation (F)" })] }) }), _jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsx(Button, { size: "sm", variant: isAICoDesignerActive ? 'default' : 'outline', onClick: onAICoDesignerToggle, "aria-pressed": isAICoDesignerActive, title: "AI Co-Designer (A)", children: _jsx(Palette, { className: "w-4 h-4" }) }) }), _jsx(TooltipContent, { children: "AI Co-Designer (A)" })] }) })] })] }));
};
export default FloatingToolbar;
