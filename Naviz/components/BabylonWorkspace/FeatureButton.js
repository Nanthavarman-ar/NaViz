import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "../ui/button";
import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from "../ui/tooltip";
export const FeatureButton = ({ feature, active, onToggle, size = "default" }) => (_jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { asChild: true, children: _jsxs(Button, { size: size, variant: active ? 'default' : 'outline', onClick: () => onToggle(feature.id, !active), className: `flex items-center gap-2 transition-all duration-200 hover:scale-105 ${feature.category === 'essential'
                        ? 'bg-blue-700 hover:bg-blue-800 text-white border-blue-700 shadow-lg'
                        : 'hover:bg-gray-200 dark:hover:bg-gray-700'}`, children: [feature.icon, _jsx("span", { className: "font-semibold", children: feature.name })] }) }), _jsx(TooltipContent, { side: "right", className: "max-w-xs", children: _jsxs("div", { className: "text-sm", children: [_jsx("div", { className: "font-semibold text-blue-500", children: feature.name }), _jsx("div", { className: "text-muted-foreground mt-1", children: feature.description }), _jsxs("div", { className: "text-muted-foreground mt-2 flex items-center gap-1", children: [_jsx("kbd", { className: "px-2 py-1 bg-gray-800 rounded text-xs font-mono", children: feature.hotkey }), _jsx("span", { className: "text-xs", children: "Hotkey" })] })] }) })] }) }, feature.id));
