import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from './ui/button';
import { Box, Download, Camera, Undo, Redo, Play, Pause, Square, ZoomIn, ZoomOut, RotateCw, Move, Scale, Sun, Eye, EyeOff, Layers, Settings, Wind, Mountain, Droplet, Volume2, Cloud, Activity, Ruler, Zap, DollarSign, Shield, Sofa, Brain, Wand2, Mic, MapPin, Palette, Construction, Eye as EyeIcon, Smartphone, Hand, Presentation, MessageSquare, Search, Network, Users, CloudSnow } from 'lucide-react';
const Toolbar = ({ onAddCube, onExportGLB, onScreenshot, onUndo, onRedo, onPlay, onPause, onStop, onZoomIn, onZoomOut, onRotate, onMove, onScale, onToggleLighting, onToggleVisibility, onToggleLayers, onSettings, isPlaying = false, isVisible = true, lightingEnabled = true, onToggleWindTunnel, onToggleTopography, onToggleFloodSimulation, onToggleNoiseSimulation, onToggleSnowSimulation, onToggleRainSimulation, 
// Presentation feature handlers
onToggleScenarioWalkthrough, onToggleBeforeAfter, onToggleARMode, onToggleComparativeTours, onToggleMoodScenes, onToggleSeasonalDecor, onToggleROICalculator, 
// Additional handlers
onToggleWeatherSystem, onToggleEnhancedFlood, onToggleTrafficParking, onToggleShadowAnalysis, onToggleCirculationFlow, onToggleMeasureTool, onToggleErgonomicTesting, onToggleEnergyAnalysis, onToggleCostEstimator, onToggleSoundPrivacy, onToggleFurnitureClearance, onToggleAiAdvisor, onToggleAutoFurnish, onToggleAiCoDesigner, onToggleVoiceAssistant, onToggleSiteContext, onToggleLightingMoods, onToggleGeoLocation, onToggleConstructionOverlay, onToggleMultiSensory, onToggleVrArMode, onToggleHandTracking, onTogglePresenterMode, onToggleAnnotations, onTogglePropertyInspector, onToggleWorkspaceMode, onTogglePathTracing, onToggleIotIntegration, onToggleAnimationPlayPause, 
// Additional missing handlers
onToggleSunlightAnalysis, onToggleBimIntegration, onToggleMaterialManager, onToggleMultiUser, onToggleExport, onToggleSceneBrowser, 
// Missing feature handlers
onToggleMinimap, onToggleMaterialEditor, onToggleLightingControl, onToggleMovementTool }) => {
    const [activeTool, setActiveTool] = useState(null);
    const handleToolClick = (tool, callback) => {
        setActiveTool(activeTool === tool ? null : tool);
        if (callback)
            callback();
    };
    return (_jsxs("div", { className: "vertical-toolbar bg-slate-800 border-r border-slate-700 p-2 flex flex-col items-center gap-2 h-full overflow-y-auto w-16", children: [_jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "File" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('addCube', onAddCube), className: `toolbar-button w-10 h-10 ${activeTool === 'addCube' ? 'bg-slate-600' : ''}`, title: "Add Cube", children: _jsx(Box, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('export', onExportGLB), className: "w-10 h-10", title: "Export GLB", children: _jsx(Download, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('screenshot', onScreenshot), className: "w-10 h-10", title: "Screenshot", children: _jsx(Camera, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Edit" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('undo', onUndo), className: "w-10 h-10", title: "Undo", children: _jsx(Undo, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('redo', onRedo), className: "w-10 h-10", title: "Redo", children: _jsx(Redo, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Anim" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('play', onToggleAnimationPlayPause), className: `w-10 h-10 ${isPlaying ? 'bg-green-600' : ''}`, title: "Play/Pause Animation", children: _jsx(Play, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('pause', onPause), className: "w-10 h-10", title: "Pause Animation", children: _jsx(Pause, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('stop', onStop), className: "w-10 h-10", title: "Stop Animation", children: _jsx(Square, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "View" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('zoomIn', onZoomIn), className: "w-10 h-10", title: "Zoom In", children: _jsx(ZoomIn, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('zoomOut', onZoomOut), className: "w-10 h-10", title: "Zoom Out", children: _jsx(ZoomOut, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('minimap', onToggleMinimap), className: "w-10 h-10", title: "Toggle Minimap", children: _jsx(MapPin, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Tools" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('move', onMove), className: `toolbar-button w-10 h-10 ${activeTool === 'move' ? 'bg-blue-600' : ''}`, title: "Move Tool", children: _jsx(Move, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('rotate', onRotate), className: `toolbar-button w-10 h-10 ${activeTool === 'rotate' ? 'bg-blue-600' : ''}`, title: "Rotate Tool", children: _jsx(RotateCw, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('scale', onScale), className: `toolbar-button w-10 h-10 ${activeTool === 'scale' ? 'bg-blue-600' : ''}`, title: "Scale Tool", children: _jsx(Scale, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('materialEditor', onToggleMaterialEditor), className: "w-10 h-10", title: "Material Editor", children: _jsx(Palette, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('movementTool', onToggleMovementTool), className: "w-10 h-10", title: "Movement Tool", children: _jsx(Move, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Display" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('lighting', onToggleLighting), className: `w-10 h-10 ${lightingEnabled ? 'bg-yellow-600' : ''}`, title: "Toggle Lighting", children: _jsx(Sun, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('visibility', onToggleVisibility), className: `w-10 h-10 ${isVisible ? '' : 'bg-red-600'}`, title: "Toggle Visibility", children: isVisible ? _jsx(Eye, { className: "w-5 h-5" }) : _jsx(EyeOff, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('layers', onToggleLayers), className: "w-10 h-10", title: "Toggle Layers", children: _jsx(Layers, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('lightingControl', onToggleLightingControl), className: "w-10 h-10", title: "Lighting Control", children: _jsx(Sun, { className: "w-5 h-5" }) })] }), _jsx("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('settings', onSettings), className: "w-10 h-10", title: "Settings", children: _jsx(Settings, { className: "w-5 h-5" }) }) }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Sim" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('weatherSystem', onToggleWeatherSystem), className: "w-10 h-10", title: "Weather System", children: _jsx(Cloud, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('enhancedFlood', onToggleEnhancedFlood), className: "w-10 h-10", title: "Enhanced Flood", children: _jsx(Droplet, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('windTunnel', onToggleWindTunnel), className: "w-10 h-10", title: "Wind Tunnel", children: _jsx(Wind, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('noiseSimulation', onToggleNoiseSimulation), className: "w-10 h-10", title: "Noise Simulation", children: _jsx(Volume2, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('snowSimulation', onToggleSnowSimulation), className: "w-10 h-10", title: "Snow Simulation", children: _jsx(CloudSnow, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('rainSimulation', onToggleRainSimulation), className: "w-10 h-10", title: "Rain Simulation", children: _jsx(Droplet, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Analysis" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('measureTool', onToggleMeasureTool), className: "w-10 h-10", title: "Measure Tool", children: _jsx(Ruler, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('energyAnalysis', onToggleEnergyAnalysis), className: "w-10 h-10", title: "Energy Analysis", children: _jsx(Zap, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('costEstimator', onToggleCostEstimator), className: "w-10 h-10", title: "Cost Estimator", children: _jsx(DollarSign, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('soundPrivacy', onToggleSoundPrivacy), className: "w-10 h-10", title: "Sound Privacy", children: _jsx(Shield, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('furnitureClearance', onToggleFurnitureClearance), className: "w-10 h-10", title: "Furniture Clearance", children: _jsx(Sofa, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('sunlightAnalysis', onToggleSunlightAnalysis), className: "w-10 h-10", title: "Sunlight Analysis", children: _jsx(Sun, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "AI" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('aiAdvisor', onToggleAiAdvisor), className: "w-10 h-10", title: "AI Structural Advisor", children: _jsx(Brain, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('autoFurnish', onToggleAutoFurnish), className: "w-10 h-10", title: "Auto-Furnish", children: _jsx(Wand2, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('aiCoDesigner', onToggleAiCoDesigner), className: "w-10 h-10", title: "AI Co-Designer", children: _jsx(Palette, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('voiceAssistant', onToggleVoiceAssistant), className: "w-10 h-10", title: "Voice Assistant", children: _jsx(Mic, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Env" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('siteContext', onToggleSiteContext), className: "w-10 h-10", title: "Site Context", children: _jsx(MapPin, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('topography', onToggleTopography), className: "w-10 h-10", title: "Topography", children: _jsx(Mountain, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('lightingMoods', onToggleLightingMoods), className: "w-10 h-10", title: "Lighting Moods", children: _jsx(Sun, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('geoLocation', onToggleGeoLocation), className: "w-10 h-10", title: "Geo Location", children: _jsx(MapPin, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Constr" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('constructionOverlay', onToggleConstructionOverlay), className: "w-10 h-10", title: "Construction Overlay", children: _jsx(Construction, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Interact" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('multiSensory', onToggleMultiSensory), className: "w-10 h-10", title: "Multi-Sensory", children: _jsx(EyeIcon, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('vrArMode', onToggleVrArMode), className: "w-10 h-10", title: "VR/AR Mode", children: _jsx(Smartphone, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('handTracking', onToggleHandTracking), className: "w-10 h-10", title: "Hand Tracking", children: _jsx(Hand, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Collab" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('presenterMode', onTogglePresenterMode), className: "w-10 h-10", title: "Presenter Mode", children: _jsx(Presentation, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('annotations', onToggleAnnotations), className: "w-10 h-10", title: "Annotations", children: _jsx(MessageSquare, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Utils" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('propertyInspector', onTogglePropertyInspector), className: "w-10 h-10", title: "Property Inspector", children: _jsx(Search, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('workspaceMode', onToggleWorkspaceMode), className: "w-10 h-10", title: "Workspace Mode", children: _jsx(Box, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 border-b border-slate-600 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Adv" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('pathTracing', onTogglePathTracing), className: "w-10 h-10", title: "Path Tracing", children: _jsx(Activity, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('iotIntegration', onToggleIotIntegration), className: "w-10 h-10", title: "IoT Integration", children: _jsx(Network, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('bimIntegration', onToggleBimIntegration), className: "w-10 h-10", title: "BIM Integration", children: _jsx(Construction, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('materialManager', onToggleMaterialManager), className: "w-10 h-10", title: "Material Manager", children: _jsx(Palette, { className: "w-5 h-5" }) }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('multiUser', onToggleMultiUser), className: "w-10 h-10", title: "Multi-User", children: _jsx(Users, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "flex flex-col items-center gap-2 p-2 w-full", children: [_jsx("div", { className: "text-xs text-slate-400 mb-1", children: "Pres" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('scenarioWalkthrough', onToggleScenarioWalkthrough), className: "w-10 h-10 text-lg", title: "Scenario Walkthroughs", children: "\uD83C\uDFAD" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('beforeAfter', onToggleBeforeAfter), className: "w-10 h-10 text-lg", title: "Before/After Toggle", children: "\u2696\uFE0F" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('arMode', onToggleARMode), className: "w-10 h-10 text-lg", title: "AR Mini Model Mode", children: "\uD83D\uDCF1" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('comparativeTours', onToggleComparativeTours), className: "w-10 h-10 text-lg", title: "Comparative Tours", children: "\uD83D\uDD04" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('moodScenes', onToggleMoodScenes), className: "w-10 h-10 text-lg", title: "Interactive Mood Scenes", children: "\uD83C\uDFA8" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('seasonalDecor', onToggleSeasonalDecor), className: "w-10 h-10 text-lg", title: "Seasonal Auto-Decor", children: "\uD83C\uDF84" }), _jsx(Button, { variant: "ghost", size: "sm", onClick: () => handleToolClick('roiCalculator', onToggleROICalculator), className: "w-10 h-10 text-lg", title: "Mortgage/ROI Calculator", children: "\uD83D\uDCB0" })] })] }));
};
export default Toolbar;
